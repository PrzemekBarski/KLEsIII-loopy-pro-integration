// Synth 1: CC80 0
// Synth 2: CC 81 0
// Synth 3: CC 82 0
// Bass:    CC 83 0/1
// Guitar:  CC 84 0/1
// Vocal:   CC 85 0/1
// Piano:   CC 86 0
// FX:      CC 87 0/1
// Monitor: CC 88 0/1

@OnLoad 
  ShowLayout 3
  SetShortName {KLEs3 Display}
  
  SetLFOType 0, {Square} 
  SetupLFO 0, 0, 0x7F, False, 4
  
  Call @DefineVars
  Call @DefinePages
  
  daw_init = [0x00, 0x20, 0x6B, 0x7F, 0x42, 0x02, 0x0F, 0x40, 0x5A, 0x01]
  SendSysex daw_init, 10

  page = 2
  Call @LoadPage

@End


@DefinePages
  
  no_of_templates = 9
  no_of_pages = 7
  pages = [3, 4, 0, 1, 2, 6, 5]
  pages_enabled = [1, 1, 1, 1, 1, 1, 1]
  
  page_names[0 * string_length] = [_S,y,n,t,h,__,_[1]]
  page_names[1 * string_length] = [_S,y,n,t,h,_[2]]
  page_names[2 * string_length] = [_S,y,n,t,h,__,_[3]]
  page_names[3 * string_length] = [_B,a,s,s]
  page_names[4 * string_length] = [_G,u,i,t,a,r]
  page_names[5 * string_length] = [_V,o,c,a,l]
  page_names[6 * string_length] = [_P,i,a,n,o]
  page_names[7 * string_length] = [_F,_X]
  page_names[8 * string_length] = [_M,o,n,i,t,o,r]

  page_icons = [0x18, 0x18, 0x18, 0x03, 0x03, 0x37, 0x28, 0x2F, 0x3F]
  page_parts = [0, 0, 0, 1, 1, 1, 0, 1, 0]            // 0 = 1 part; 1 = 2 parts;
  page_groups = [0, 0, 0, 1, 1, 0, 0, 0, 0]
  
@End



@OnMidiCC
  
  // Receive active page
  
  if MIDIChannel = 15 AND MIDIByte2 >= 80 AND MIDIByte2 < 80 + no_of_pages
    page_index = MIDIByte2 - 80
    part = 0
    if MIDIByte3
      part = MIDIByte3
    endif
    
    it = no_of_pages
    while it >0
      Dec it
      if pages[it] = page_index
        page = it
        Call @LoadPage
      endif
    endwhile
  endif
  
  // Receive scroll event from keyboard
  
  if MIDIByte2 = 0x74
    if MIDIByte3 = 63
      if page > 0
        Dec page
        part = 0
        while NOT pages_enabled[page] AND page > 0
          Dec page
        endwhile
        if pages_enabled[page]
          SendMIDICC 16, 80 + pages[page], part
        endif
      endif
    elseif MIDIByte3 = 65
      if page < no_of_pages - 1
        Inc page
        part = 0
        while NOT pages_enabled[page] AND page < no_of_pages
          Inc page
        endwhile
        if pages_enabled[page]
          SendMIDICC 16, 80 + pages[page], part
        endif 
      endif
    endif
  endif
  
  // Receive "part" button press

  if MIDIByte2 = 0x77 AND MIDIByte3 > 0 AND page_parts[pages[page]]
    part = NOT part
    SendMIDICC 16, 80 + pages[page], part 
  endif
  
  // Receive page on / off events

  if MIDIChannel = 15 AND MIDIByte2 >= 50 AND MIDIByte2 < 62
    page_index = MIDIByte2 - 50
    pages_enabled[page_index] = MIDIByte3
  endif
  
  // Receive monitor mode trigger
  
  if MIDIChannel = 15 AND MIDIByte2 = 40
    if MIDIByte3
      monitor_mode = 1
      SetTimerInterval 100
      StartTimer
    else
      monitor_mode = 0
      StopTimer
      Call @MakeFooter
    endif
  endif
  
  if MIDIChannel = 0 AND MIDIByte2 = 44
    if MIDIByte3 and monitor_mode = 1
      SendMIDICC 16, 40, 0, 200
      monitor_mode = 0
      StopTimer
      Call @MakeFooter
    endif
  endif
@End

@OnXYChange
  SendMIDICC 0, 1, GetYValue
  // SendMIDIPitchBend 0, GetXValue * 128
@End


@LoadPage

  prev = page - 1
  next = page + 1
  
  FillArray left_right_nav__l_line, 0, 7
  FillArray left_right_nav__r_line, 0, 7

  if prev >= 0
    while NOT pages_enabled[prev] AND prev > 0
      Dec prev
    endwhile
    if pages_enabled[prev]
      CopyArray page_names[pages[prev] * string_length], left_right_nav__l_line, 7
    endif
  endif
  
  while NOT pages_enabled[next] AND next < no_of_pages
    Inc next
  endwhile
  if next < no_of_pages AND pages_enabled[page]
    CopyArray page_names[pages[next] * string_length], left_right_nav__r_line, 7
  endif
  
  
  make_screen__type = 0x19
  make_screen__icon = page_icons[pages[page]]
  CopyArray page_names[pages[page] * string_length], make_screen__line1, string_length
  
  button_id = 0x07
  button_data = [0x04, 0x01, 0x16, button_id]
    
  if NOT page_parts[pages[page]]
    off = [0,0,0]
    CopyArray off, button_data[4], 3
  elseif part = 1
    pink = [0x7F,0,0x7F]
    CopyArray pink, button_data[4], 3
    make_screen__line2 = [_P,a,r,t,__,_[part + 1]]
  else
    yellow = [0x7F,0x7F,0]
    CopyArray yellow, button_data[4], 3
    make_screen__line2 = [_P,a,r,t,__,_[part + 1]]
  endif
 
  CopyArray button_data, send_sysex__data, 7
  send_sysex__length = 7
  Call @SendSysEx
  
  Call @MakeScreen
  
  Call @LeftRightNav

  CopyArray left_right_nav__return, make_header__line1, string_length 
  Call @MakeHeader
  
  make_footer = 1
  SetTimerInterval 100
  ResetTimer
  StartTimer
@End


@OnTimer
  
  if make_footer
    Call @MakeFooter
    make_footer = 0
  endif
  
  if monitor_mode
    new_led_value = GetLFOValue 0
    if NOT (monitor_led_value = new_led_value)
      monitor_led_value = new_led_value
      button_data = [0x04, 0x01, 0x16, 0x18, monitor_led_value, 0x00, 0x00]
      CopyArray button_data, send_sysex__data, 7
      send_sysex__length = 7
      Call @SendSysEx
    endif
  else
    StopTimer
    ResetTimer 
  endif
@End


@LoadPart

    
@End


@SendSysEx

  CopyArray sysex_prefix, send_sysex__return, 5
  CopyArray send_sysex__data, send_sysex__return[5], send_sysex__length
  send_sysex__length = send_sysex__length + 5
  
  SendSysex send_sysex__return, send_sysex__length
@End


@WrapDisplay

  CopyArray display_prefix, wrap_display__return, 3
  CopyArray wrap_display__data, wrap_display__return[3], wrap_display__length
  send_sysex__length = wrap_display__length + 3
  CopyArray wrap_display__return, send_sysex__data, send_sysex__length
  Call @SendSysEx
@End


@MakeScreen
  
  // Fill 1st line
  
  make_screen__return = [make_screen__type, 0x01]
  CopyArray make_screen__line1, make_screen__return[2], 19
  make_screen__length = 21
  
  // Fill 2nd line
  
  if make_screen__type > 0x11
    make_screen__return[make_screen__length] = 0x02
    Inc make_screen__length
    CopyArray make_screen__line2, make_screen__return[make_screen__length], 19
    make_screen__length = make_screen__length + 19
  endif
  
  // Fill hw_value or icon
  
  if make_screen__type > 0x13 and make_screen__type < 0x17
    make_screen__return[make_screen__length] = 0x03
    Inc make_screen__length
    make_screen__return[make_screen__length] = make_screen__hw_value
    Inc make_screen__length
  elseif make_screen__type > 0x18
    make_screen__return[make_screen__length] = 0x03
    Inc make_screen__length
    make_screen__return[make_screen__length] = make_screen__icon
    Inc make_screen__length
  endif
  
  // Handle transient
  
  if make_screen__type = 0x17
    make_screen__return[make_screen__length] = 01
    Inc make_screen__length
  elseif NOT (make_screen__type = 0x13)
    make_screen__return[make_screen__length] = make_screen__transient
    Inc make_screen__length
  endif
  
  // Wrap with Display code
  
  wrap_display__length = make_screen__length
  CopyArray make_screen__return, wrap_display__data, wrap_display__length
  Call @WrapDisplay
  
  // Reset params
  
  FillArray make_screen__line1, 0, 19
  FillArray make_screen__line2, 0, 19
  make_screen__transient = 0
@End


@MakeHeader
  
  make_header__return = [0x01, 0x02]
  CopyArray make_header__line1, make_header__return[2], 20
  
  wrap_display__length = make_header__length
  CopyArray make_header__return, wrap_display__data, wrap_display__length
  Call @WrapDisplay
@End


@LeftRightNav

  FillArray left_right_nav__return, __, 18
  
  if NOT left_right_nav__l_line[0]
    left_right_nav__return[0] = 0x20
  else
    left_right_nav__return[0] = 0x3C
  endif
  
  if NOT left_right_nav__r_line[0]
    left_right_nav__return[17] = 0x20
  else
    left_right_nav__return[17] = 0x3E
  endif

  line_index = 0
  repeat
    if left_right_nav__l_line[line_index]
      left_right_nav__return[line_index + 1] = left_right_nav__l_line[line_index]
    endif
    Inc line_index
  until line_index >= 7
  
  line_index = 7
  repeat
    Dec line_index
  until left_right_nav__r_line[line_index] OR line_index <= 0

  Inc line_index
  return_index = 17
  repeat
    Dec return_index
    Dec line_index
    left_right_nav__return[return_index] = left_right_nav__r_line[line_index]
  until line_index <= 0
  
  FillArray left_right_nav__l_line, 0, 7
  FillArray left_right_nav__r_line, 0, 7
@End


@MakeFooter
  
  footer_data = [0x03]
  footer_length = 1
  
  buttons_it = 0
  while buttons_it < 4
    label_index = 44 * label_length + (part * 4 + buttons_it) * label_length

    button_id = 0x18 + buttons_it
    button_data = [0x04, 0x01, 0x16, button_id, 0x00, 0x00, 0x00]

    if GLOBAL10[label_index]
      footer_data[footer_length] = 0x10 * (buttons_it + 1) + 1
      Inc footer_length
      letter_index = 0
      while GLOBAL10[label_index + letter_index] AND letter_index < 7
        footer_data[footer_length] = GLOBAL10[label_index + letter_index]
        Inc footer_length
        Inc letter_index
      endwhile
      footer_data[footer_length] = 0x00
      Inc footer_length

      button_data = [0x04, 0x01, 0x16, button_id, 0x7F, 0x7F, 0x7F]
    else
      footer_data[footer_length] = [0x10 * (buttons_it + 1), 0x00, 0x00]
      footer_length = footer_length + 3
    endif

    CopyArray button_data, send_sysex__data, 7
    send_sysex__length = 7
    Call @SendSysEx
    
    Inc buttons_it
  endwhile
  
  wrap_display__length = footer_length
  CopyArray footer_data, wrap_display__data, wrap_display__length
  Call @WrapDisplay
  
@End


//  CopyArray data, log_array__data, make_screen__length
//  log_array__length = data__length
//  Call @LogArray

@LogArray

  log_it = log_array__length
  while log_it > 0
    Dec log_it
    Log log_array__length, {: }, log_array__data[log_array__length]
  endwhile
@End



@DefineVars

  sysex_prefix = [0x00, 0x20, 0x6B, 0x7F, 0x42]
  display_prefix = [0x04, 0x01, 0x60]
  string_length = 18
  label_length = 12
  page = 6
  part = 0
  monitor_mode = 0
  monitor_led_value = 0
  
  // @SendSysEx params
    send_sysex__data = []
    send_sysex__length = 0
    send_sysex__return = []
  
  // @WrapDisplay params
    wrap_display__data = []
    wrap_display__length = 0
    wrap_display__return = []
  
  // @MakeScreen params
    make_screen__type = 0x10
    make_screen__line1 = []
    make_screen__line2 = []
    make_screen__icon = 0
    make_screen__hw_value = 0
    make_screen__transient = 0
    make_screen__return = []
    
  // @MakeHeader params
    make_header__line1 = []
    make_header__return = []
    make_header__length = 22
    
  // @LeftRightNav params
    left_right_nav__l_line = []
    left_right_nav__r_line = []
    left_right_nav__return = []
    
  // ASCII Table
    __ = 0x20
    
    _A = 0x41
    _B = 0x42
    _C = 0x43
    _D = 0x44
    _E = 0x45
    _F = 0x46
    _G = 0x47
    _H = 0x48
    _I = 0x49
    _J = 0x4A
    _K = 0x4B
    _L = 0x4C
    _M = 0x4D
    _N = 0x4E
    _O = 0x4F
    _P = 0x50
    _Q = 0x51
    _R = 0x52
    _S = 0x53
    _T = 0x54
    _U = 0x55
    _V = 0x56
    _W = 0x57
    _X = 0x58
    _Y = 0x59
    _Z = 0x5A
    
    a = 0x61
    b = 0x62
    c = 0x63
    d = 0x64
    e = 0x65
    f = 0x66
    g = 0x67
    h = 0x68
    i = 0x69
    j = 0x6A
    k = 0x6B
    l = 0x6C
    m = 0x6D
    n = 0x6E
    o = 0x6F
    p = 0x70
    q = 0x71
    r = 0x72
    s = 0x73
    t = 0x74
    u = 0x75
    v = 0x76
    w = 0x77
    x = 0x78
    y = 0x79
    z = 0x7A
    
    _ = [0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39]
  
@End
